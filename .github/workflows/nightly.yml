name: Build nightly release

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"
  push:
    tags:
      - "nightly"

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          clean: false
          repository: zed-industries/zed

      - name: Setup build tools
        run: |
          rustc --version
          cargo --version
          rustup target add wasm32-wasi

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build nightly
        run: cargo build --release --locked --package zed

      - name: Install cargo get package
        run: cargo install cargo-get

      - name: Get vars
        id: vars
        run: |
          $NOW = (Get-Date -format yyyyMMdd)
          echo "NOW: ${NOW}"
          Write-Output "now=${NOW}" >> $Env:GITHUB_OUTPUT
          $HASH = (git rev-parse HEAD).Substring(0,9)
          echo "HASH: ${HASH}"
          Write-Output "hash=${HASH}" >> $Env:GITHUB_OUTPUT
          $VERSION = (cargo get package.version --entry="./crates/zed")
          echo "VERSION: ${VERSION}"
          Write-Output "version=${VERSION}" >> $Env:GITHUB_OUTPUT

      - name: Create nightly release
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "${{ steps.vars.outputs.version }}-dev.${{ steps.vars.outputs.now }}" --title "${{ steps.vars.outputs.version }}-dev.${{ steps.vars.outputs.now }}" --notes "Nightly v${{ steps.vars.outputs.version }}-dev.${{ steps.vars.outputs.now }} / ${{ steps.vars.outputs.hash }}" --repo geerteltink/zed-windows --prerelease target\release\zed.exe
